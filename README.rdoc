= PassiveRecord

PassiveRecord provides ActiveRecord-like behavior for static, non-database models. 

PassiveRecord was developed for Sharp Sync, a new product by {Ministry Centered Technologies}[http://www.planningcenteronline.com/]

== Resources for Non-ActiveRecord models 

* http://railscasts.com/episodes/121-non-active-record-model


== Example

  class Name < PassiveRecord
    define_attributes [:first_name, :middle_name, :last_name]
  end

...will create a new EmailAddress model with id, address, and location attributes. 

  class Person < PassiveRecord
    has_many :names
  end
  
  @person = Person.new(:names => [Name.new(:first_name => "Dima", :last_name => "Dozen")])

This would a Person object that has many names. You can now access the names hash just like you would an ActiveRecord object. 

  @person.names #=> [#<Name:0x2031824 @last_name="Dozen", @first_name="Dima">]
  
  
You can serialize a PassiveRecord object into another database object for storage: 
  
  class Address < PassiveRecord
    define_attributes [:street, :city, :state, :postal_code, :country]
  end
  
  class Company < ActiveRecord
    serialize :address
  end
  
  @company.address = Address.new(:street1 => "123 4th St", :city => "Wellington", :country => "NZ")

== Due Credit

* {Ministry Centered Technologies}[http://www.planningcenteronline.com/] created the need
* Ryan Heneise of {Art of Mission, Inc.}[http://artofmission.com/] wrote the code

Copyright (c) 2008 Ryan Heneise, released under the MIT license
